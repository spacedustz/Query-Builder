name: Build and Test Action

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: cosmic-dangnyang-cicd-bucket

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Gradle을 캐싱함으로써 빌드 속도 향상
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # JDK Setup
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: gradle

      # Grant 빌드 권한
      - name: Grant Execute Permission for Gradle
        run: chmod +x gradle

      # Build
      - name: Build with Gradle
        run: ./gradlew build

      # Error Report 압축
      - name: Compress All Report Files
        if: ${{ failure() }}
        run: |
          echo "Compressing All Report Files..."
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          mkdir report_files
          REPORT_DIRS=$(find . -type d -path '*/build/reports/tests/test')
          for dir in $REPORT_DIRS; do
            module_path=$(echo $dir | awk -F'/build/' '{print $1}' | cut -c 3-)
            cp -r "$dir" "report_files/$module_path/$(basename "$(dirname "$dir")")"
          done
          tar czvf "report_files_$TIMESTAMP.tar.gz" report_files

      # 압축된 Error Report Upload
      - name: Upload Error Report Files to Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: report_files
          path: report_files_*.tar.gz

      # Build 후 프로젝트 압축
      - name: Compress jar FIle
        run: zip -r ./ci.zip .
        shell: bash

      # AWS Access & Secret Key 권한 확인, Github Actions Secret에서 등록
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      # 압축한 프로젝트 S3로 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./ci.zip s3://$S3_BUCKET_NAME/ci.zip
